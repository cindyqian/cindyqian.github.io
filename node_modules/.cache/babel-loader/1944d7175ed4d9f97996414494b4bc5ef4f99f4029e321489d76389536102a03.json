{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useEffect, useState } from 'react';\nexport default function useIsVisible(ref) {\n  _s();\n  const [isIntersecting, setIntersecting] = useState(false);\n  useEffect(() => {\n    const observer = new IntersectionObserver(([entry]) => setIntersecting(entry.isIntersecting));\n    observer.observe(ref.current);\n    return () => {\n      observer.disconnect();\n    };\n  }, [ref]);\n  return isIntersecting;\n}\n_s(useIsVisible, \"+TWZGT8mxcpNH+JS7IkSFv1hR0A=\");","map":{"version":3,"names":["useRef","useEffect","useState","useIsVisible","ref","_s","isIntersecting","setIntersecting","observer","IntersectionObserver","entry","observe","current","disconnect"],"sources":["/Users/markqian/Desktop/projects/cindyqsite/src/components/IsVisible.js"],"sourcesContent":["\nimport { useRef, useEffect, useState } from 'react';\n\nexport default function useIsVisible(ref) {\n    const [isIntersecting, setIntersecting] = useState(false);\n  \n    useEffect(() => {\n      const observer = new IntersectionObserver(([entry]) =>\n        setIntersecting(entry.isIntersecting)\n      );\n  \n      observer.observe(ref.current);\n      return () => {\n        observer.disconnect();\n      };\n    }, [ref]);\n  \n    return isIntersecting;\n  }"],"mappings":";AACA,SAASA,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,eAAe,SAASC,YAAYA,CAACC,GAAG,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,cAAc,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAEzDD,SAAS,CAAC,MAAM;IACd,MAAMO,QAAQ,GAAG,IAAIC,oBAAoB,CAAC,CAAC,CAACC,KAAK,CAAC,KAChDH,eAAe,CAACG,KAAK,CAACJ,cAAc,CACtC,CAAC;IAEDE,QAAQ,CAACG,OAAO,CAACP,GAAG,CAACQ,OAAO,CAAC;IAC7B,OAAO,MAAM;MACXJ,QAAQ,CAACK,UAAU,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACT,GAAG,CAAC,CAAC;EAET,OAAOE,cAAc;AACvB;AAACD,EAAA,CAfqBF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}