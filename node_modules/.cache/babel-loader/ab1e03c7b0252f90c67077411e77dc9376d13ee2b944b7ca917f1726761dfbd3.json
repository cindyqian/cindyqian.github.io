{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useEffect, useState } from 'react';\nexport function AreImagesVisible(ref) {\n  _s();\n  //     const [isIntersecting, setIntersecting] = useState(false);\n\n  //     useEffect(() => {\n  //       const observer = new IntersectionObserver(([entry]) =>\n  //         setIntersecting(entry.isIntersecting)\n  //       );\n\n  //       observer.observe(ref.current);\n  //       return () => {\n  //         observer.disconnect();\n  //       };\n  //     }, [ref]);\n\n  //     return isIntersecting;\n  //   }\n  const [isOnScreen, setIsOnScreen] = useState(false);\n  const observerRef = useRef(null);\n  useEffect(() => {\n    observerRef.current = new IntersectionObserver(([entry]) => setIsOnScreen(entry.isIntersecting));\n  }, []);\n  useEffect(() => {\n    observerRef.current.observe(ref.current);\n    return () => {\n      observerRef.current.disconnect();\n    };\n  }, [ref]);\n  return isOnScreen;\n}\n_s(AreImagesVisible, \"jbILBl+MaN2EKKpjcqCWrMC+Wcc=\");\n_c = AreImagesVisible;\nvar _c;\n$RefreshReg$(_c, \"AreImagesVisible\");","map":{"version":3,"names":["useRef","useEffect","useState","AreImagesVisible","ref","_s","isOnScreen","setIsOnScreen","observerRef","current","IntersectionObserver","entry","isIntersecting","observe","disconnect","_c","$RefreshReg$"],"sources":["/Users/markqian/Desktop/projects/cindyqsite/src/components/ImageStatus.js"],"sourcesContent":["\nimport { useRef, useEffect, useState } from 'react';\n\nexport function AreImagesVisible(ref) {\n//     const [isIntersecting, setIntersecting] = useState(false);\n  \n//     useEffect(() => {\n//       const observer = new IntersectionObserver(([entry]) =>\n//         setIntersecting(entry.isIntersecting)\n//       );\n  \n//       observer.observe(ref.current);\n//       return () => {\n//         observer.disconnect();\n//       };\n//     }, [ref]);\n  \n//     return isIntersecting;\n//   }\n  const [isOnScreen, setIsOnScreen] = useState(false);\n  const observerRef = useRef(null);\n\n  useEffect(() => {\n    observerRef.current = new IntersectionObserver(([entry]) =>\n      setIsOnScreen(entry.isIntersecting)\n    );\n  }, []);\n\n  useEffect(() => {\n    observerRef.current.observe(ref.current);\n\n    return () => {\n      observerRef.current.disconnect();\n    };\n  }, [ref]);\n\n  return isOnScreen;\n}\n"],"mappings":";AACA,SAASA,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,OAAO,SAASC,gBAAgBA,CAACC,GAAG,EAAE;EAAAC,EAAA;EACtC;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMM,WAAW,GAAGR,MAAM,CAAC,IAAI,CAAC;EAEhCC,SAAS,CAAC,MAAM;IACdO,WAAW,CAACC,OAAO,GAAG,IAAIC,oBAAoB,CAAC,CAAC,CAACC,KAAK,CAAC,KACrDJ,aAAa,CAACI,KAAK,CAACC,cAAc,CACpC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENX,SAAS,CAAC,MAAM;IACdO,WAAW,CAACC,OAAO,CAACI,OAAO,CAACT,GAAG,CAACK,OAAO,CAAC;IAExC,OAAO,MAAM;MACXD,WAAW,CAACC,OAAO,CAACK,UAAU,CAAC,CAAC;IAClC,CAAC;EACH,CAAC,EAAE,CAACV,GAAG,CAAC,CAAC;EAET,OAAOE,UAAU;AACnB;AAACD,EAAA,CAlCeF,gBAAgB;AAAAY,EAAA,GAAhBZ,gBAAgB;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}